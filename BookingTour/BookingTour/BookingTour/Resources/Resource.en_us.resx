<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Bài viết" xml:space="preserve">
    <value>Bài viết</value>
  </data>
  <data name="Chọn địa điểm đến" xml:space="preserve">
    <value>Chọn địa điểm đến</value>
  </data>
  <data name="Du thuyền" xml:space="preserve">
    <value>Du thuyền</value>
  </data>
  <data name="Hoạt động giải trí ngoài trời" xml:space="preserve">
    <value>Hoạt động giải trí ngoài trời</value>
  </data>
  <data name="Hãng hàng không" xml:space="preserve">
    <value>Hãng hàng không</value>
  </data>
  <data name="Hóa đơn" xml:space="preserve">
    <value>Hóa đơn</value>
  </data>
  <data name="Khuyến mãi &amp; Giảm giá đặc biệt" xml:space="preserve">
    <value>Khuyến mãi &amp; Giảm giá đặc biệt</value>
  </data>
  <data name="Khách sạn" xml:space="preserve">
    <value>Khách sạn</value>
  </data>
  <data name="Lịch sử đặt" xml:space="preserve">
    <value> Lịch sử đặt</value>
  </data>
  <data name="Một con sông nhỏ tên Duden chảy qua nơi này và cung cấp cho họ những thứ cần thiết. Đây là một quốc gia như thiên đường, nơi mà những phần câu đã nướng chảy vào miệng bạn." xml:space="preserve">
    <value>Một con sông nhỏ tên Duden chảy qua nơi này và cung cấp cho họ những thứ cần thiết. Đây là một quốc gia như thiên đường, nơi mà những phần câu đã nướng chảy vào miệng bạn.</value>
  </data>
  <data name="Số chuyến đi" xml:space="preserve">
    <value>Số chuyến đi</value>
  </data>
  <data name="Số lượng khách hàng" xml:space="preserve">
    <value>Số lượng khách hàng</value>
  </data>
  <data name="Số lượng nhân viên" xml:space="preserve">
    <value>Số lượng nhân viên</value>
  </data>
  <data name="Số lượng quốc gia" xml:space="preserve">
    <value>Số lượng quốc gia</value>
  </data>
  <data name="Thuê xe" xml:space="preserve">
    <value>Thuê xe</value>
  </data>
  <data name="Tour" xml:space="preserve">
    <value>Tour</value>
  </data>
  <data name="Trang chủ" xml:space="preserve">
    <value>Trang chủ</value>
  </data>
  <data name="Trang cá nhân" xml:space="preserve">
    <value>Trang cá nhân</value>
  </data>
  <data name="Trải nghiệm kỳ nghĩ tuyệt vời Ở" xml:space="preserve">
    <value>Trải nghiệm kỳ nghĩ tuyệt vời Ở</value>
  </data>
  <data name="Tìm kiếm" xml:space="preserve">
    <value>Tìm kiếm</value>
  </data>
  <data name="Xa xôi, sau những dãy núi từ những quốc gia Vokalia và Consonantia, có những văn bản mù. Chúng sống tách biệt ở Bookmarksgrove ngay tại bờ biển của Semantics, một đại dương ngôn ngữ rộng lớn." xml:space="preserve">
    <value>Xa xôi, sau những dãy núi từ những quốc gia Vokalia và Consonantia, có những văn bản mù. Chúng sống tách biệt ở Bookmarksgrove ngay tại bờ biển của Semantics, một đại dương ngôn ngữ rộng lớn.</value>
  </data>
  <data name="Xem Video Tour" xml:space="preserve">
    <value>Xem Video Tour</value>
  </data>
  <data name="Xã xa, đằng sau những ngọn núi chữ, xa khỏi các quốc gia Vokalia và Consonantia, có những văn bản mù sống. Tách biệt chúng sống trong Bookmarksgrove ngay tại bờ biển của Semantics, một đại dương ngôn ngữ rộng lớn." xml:space="preserve">
    <value>Xã xa, đằng sau những ngọn núi chữ, xa khỏi các quốc gia Vokalia và Consonantia, có những văn bản mù sống. Tách biệt chúng sống trong Bookmarksgrove ngay tại bờ biển của Semantics, một đại dương ngôn ngữ rộng lớn.</value>
  </data>
  <data name="Điểm đén phổ biến" xml:space="preserve">
    <value>Điểm đén phổ biến</value>
  </data>
  <data name="đăng ký làm nhà cung cấp" xml:space="preserve">
    <value>đăng ký làm nhà cung cấp</value>
  </data>
</root>